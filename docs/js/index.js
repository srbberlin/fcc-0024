(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

window.onload = function () {
  var tooltip = d3.select('#tooltip');
  var color = d3.scaleThreshold().domain(d3.range(2.6, 75.1, (75.1 - 2.6) / 8)).range(d3.schemeGreens[9]);
  var legScale = d3.scaleLinear().domain([2.6, 75.1]).rangeRound([600, 860]);
  var svg = d3.select('svg');
  var legend = svg.append('g').attr('class', 'key').attr('id', 'legend').attr('transform', 'translate(0,40)');
  d3.queue().defer(d3.json, 'https://raw.githubusercontent.com/no-stack-dub-sack/testable-projects-fcc/master/src/data/choropleth_map/counties.json').defer(d3.json, 'https://raw.githubusercontent.com/no-stack-dub-sack/testable-projects-fcc/master/src/data/choropleth_map/for_user_education.json').await(function (error, us, education) {
    if (error) throw error;
    var path = d3.geoPath();
    legend.selectAll('rect').data(color.range().map(function (d) {
      d = color.invertExtent(d);
      if (d[0] == null) d[0] = legScale.domain()[0];
      if (d[1] == null) d[1] = legScale.domain()[1];
      return d;
    })).enter().append('rect').attr('height', 8).attr('x', function (d) {
      return legScale(d[0]);
    }).attr('width', function (d) {
      return legScale(d[1]) - legScale(d[0]);
    }).attr('fill', function (d) {
      return color(d[0]);
    });
    legend.append('text').attr('class', 'caption').attr('x', legScale.range()[0]).attr('y', -6).attr('width', 240).attr('fill', '#000').attr('text-anchor', 'start').attr('font-weight', 'bold').text('The meaning of colors on the map');
    legend.call(d3.axisBottom(legScale).tickSize(13).tickFormat(function (x) {
      return Math.round(x) + '%';
    }).tickValues(color.domain())).select('.domain').remove();
    svg.append('g').attr('class', 'counties').selectAll('path').data(topojson.feature(us, us.objects.counties).features).enter().append('path').attr('class', 'county').attr('data-fips', function (d) {
      return d.id;
    }).attr('data-education', function (d) {
      var result = education.filter(function (obj) {
        return obj.fips == d.id;
      });

      if (result[0]) {
        return result[0].bachelorsOrHigher;
      }

      return 0;
    }).attr('fill', function (d) {
      var result = education.filter(function (obj) {
        return obj.fips == d.id;
      });

      if (result[0]) {
        return color(result[0].bachelorsOrHigher);
      }

      return color(0);
    }).attr('d', path).on('mouseover', function (d) {
      tooltip.style('opacity', .9);
      tooltip.html(function () {
        var result = education.filter(function (obj) {
          return obj.fips == d.id;
        });

        if (result[0]) {
          return result[0]['area_name'] + ', ' + result[0]['state'] + ': ' + result[0].bachelorsOrHigher + '%';
        }

        return 'not found';
      }).attr('data-education', function () {
        var result = education.filter(function (obj) {
          return obj.fips == d.id;
        });

        if (result[0]) {
          return result[0].bachelorsOrHigher;
        }

        return 0;
      }).style('left', d3.event.pageX + 10 + 'px').style('top', d3.event.pageY - 28 + 'px');
    }).on('mouseout', function () {
      tooltip.style('opacity', 0);
    }); //svg.append('path')
    //  .datum(topojson.feature(us, us.objects.states))
    //  .attr('d', d3.geo.path()
    //    .projection(d3.geo.albersUsa())
    //  )
    //  .attr('class', 'states')
    //  .selectAll('path')
    //  .data(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b }))
    //  .enter()
    //  .append('path')
    //  .attr('class', 'states')
    //  .attr('d', path)
  });
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLE1BQU0sQ0FBQyxNQUFQLEdBQWdCLFlBQVk7QUFDMUIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLE1BQUgsQ0FBVSxVQUFWLENBQWhCO0FBRUEsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLGNBQUgsR0FDWCxNQURXLENBQ0osRUFBRSxDQUFDLEtBQUgsQ0FBUyxHQUFULEVBQWMsSUFBZCxFQUFvQixDQUFDLE9BQUssR0FBTixJQUFXLENBQS9CLENBREksRUFFWCxLQUZXLENBRUwsRUFBRSxDQUFDLFlBQUgsQ0FBZ0IsQ0FBaEIsQ0FGSyxDQUFkO0FBSUEsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLFdBQUgsR0FDZCxNQURjLENBQ1AsQ0FBQyxHQUFELEVBQU0sSUFBTixDQURPLEVBRWQsVUFGYyxDQUVILENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FGRyxDQUFqQjtBQUtBLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxNQUFILENBQVUsS0FBVixDQUFaO0FBRUEsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUNmLE1BRFksQ0FDTCxHQURLLEVBRVosSUFGWSxDQUVQLE9BRk8sRUFFRSxLQUZGLEVBR1osSUFIWSxDQUdQLElBSE8sRUFHRCxRQUhDLEVBSVosSUFKWSxDQUlQLFdBSk8sRUFJTSxpQkFKTixDQUFmO0FBTUEsRUFBQSxFQUFFLENBQUMsS0FBSCxHQUNHLEtBREgsQ0FDUyxFQUFFLENBQUMsSUFEWixFQUNrQix3SEFEbEIsRUFFRyxLQUZILENBRVMsRUFBRSxDQUFDLElBRlosRUFFa0Isa0lBRmxCLEVBR0csS0FISCxDQUdTLFVBQUMsS0FBRCxFQUFRLEVBQVIsRUFBWSxTQUFaLEVBQTJCO0FBQ2hDLFFBQUksS0FBSixFQUFXLE1BQU0sS0FBTjtBQUNYLFFBQUksSUFBSSxH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dEUsR0FBMEYsR0FBakc7QUFDRDs7QUFDRCxlQUFPLFdBQVA7QUFDRCxPQVJELEVBU0csSUFUSCxDQVNRLGdCQVRSLEVBUzBCLFlBQVc7QUFDakMsWUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLE1BQVYsQ0FBaUIsVUFBUyxHQUFULEVBQWM7QUFDNUMsaUJBQU8sR0FBRyxDQUFDLElBQUosSUFBWSxDQUFDLENBQUMsRUFBckI7QUFDRCxTQUZjLENBQWY7O0FBR0EsWUFBRyxNQUFNLENBQUMsQ0FBRCxDQUFULEVBQWE7QUFDWCxpQkFBTyxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsaUJBQWpCO0FBQ0Q7O0FBQ0QsZUFBTyxDQUFQO0FBQ0QsT0FqQkgsRUFrQkcsS0FsQkgsQ0FrQlMsTUFsQlQsRUFrQmtCLEVBQUUsQ0FBQyxLQUFILENBQVMsS0FBVCxHQUFpQixFQUFsQixHQUF3QixJQWxCekMsRUFtQkcsS0FuQkgsQ0FtQlMsS0FuQlQsRUFtQmlCLEVBQUUsQ0FBQyxLQUFILENBQVMsS0FBVCxHQUFpQixFQUFsQixHQUF3QixJQW5CeEM7QUFvQkQsS0FwREgsRUFxREcsRUFyREgsQ0FxRE0sVUFyRE4sRUFxRGtCLFlBQVc7QUFDekIsTUFBQSxPQUFPLENBQUMsS0FBUixDQUFjLFNBQWQsRUFBeUIsQ0FBekI7QUFDRCxLQXZESCxFQXZDZ0MsQ0FnR2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNELEdBaEhIO0FBaUhELENBcklEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwid2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgdG9vbHRpcCA9IGQzLnNlbGVjdCgnI3Rvb2x0aXAnKVxuXG4gIGNvbnN0IGNvbG9yID0gZDMuc2NhbGVUaHJlc2hvbGQoKVxuICAgIC5kb21haW4oZDMucmFuZ2UoMi42LCA3NS4xLCAoNzUuMS0yLjYpLzgpKVxuICAgIC5yYW5nZShkMy5zY2hlbWVHcmVlbnNbOV0pXG5cbiAgY29uc3QgbGVnU2NhbGUgPSBkMy5zY2FsZUxpbmVhcigpXG4gICAgLmRvbWFpbihbMi42LCA3NS4xXSlcbiAgICAucmFuZ2VSb3VuZChbNjAwLCA4NjBdKVxuXG5cbiAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCdzdmcnKVxuXG4gIGNvbnN0IGxlZ2VuZCA9IHN2Z1xuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5hdHRyKCdjbGFzcycsICdrZXknKVxuICAgIC5hdHRyKCdpZCcsICdsZWdlbmQnKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsNDApJylcblxuICBkMy5xdWV1ZSgpXG4gICAgLmRlZmVyKGQzLmpzb24sICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbm8tc3RhY2stZHViLXNhY2svdGVzdGFibGUtcHJvamVjdHMtZmNjL21hc3Rlci9zcmMvZGF0YS9jaG9yb3BsZXRoX21hcC9jb3VudGllcy5qc29uJylcbiAgICAuZGVmZXIoZDMuanNvbiwgJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9uby1zdGFjay1kdWItc2Fjay90ZXN0YWJsZS1wcm9qZWN0cy1mY2MvbWFzdGVyL3NyYy9kYXRhL2Nob3JvcGxldGhfbWFwL2Zvcl91c2VyX2VkdWNhdGlvbi5qc29uJylcbiAgICAuYXdhaXQoKGVycm9yLCB1cywgZWR1Y2F0aW9uKSA9PiAge1xuICAgICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgICAgbGV0IHBhdGggPSBkMy5nZW9QYXRoKClcblxuICAgICAgbGVnZW5kXG4gICAgICAgIC5zZWxlY3RBbGwoJ3JlY3QnKVxuICAgICAgICAuZGF0YShjb2xvci5yYW5nZSgpLm1hcChmdW5jdGlvbihkKSB7XG4gICAgICAgICAgZCA9IGNvbG9yLmludmVydEV4dGVudChkKVxuICAgICAgICAgIGlmIChkWzBdID09IG51bGwpIGRbMF0gPSBsZWdTY2FsZS5kb21haW4oKVswXVxuICAgICAgICAgIGlmIChkWzFdID09IG51bGwpIGRbMV0gPSBsZWdTY2FsZS5kb21haW4oKVsxXVxuICAgICAgICAgIHJldHVybiBkXG4gICAgICAgIH0pKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIDgpXG4gICAgICAgIC5hdHRyKCd4JywgZnVuY3Rpb24oZCkgeyByZXR1cm4gbGVnU2NhbGUoZFswXSkgfSlcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24oZCkgeyByZXR1cm4gbGVnU2NhbGUoZFsxXSkgLSBsZWdTY2FsZShkWzBdKSB9KVxuICAgICAgICAuYXR0cignZmlsbCcsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGNvbG9yKGRbMF0pIH0pXG5cbiAgICAgIGxlZ2VuZFxuICAgICAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ2NhcHRpb24nKVxuICAgICAgICAuYXR0cigneCcsIGxlZ1NjYWxlLnJhbmdlKClbMF0pXG4gICAgICAgIC5hdHRyKCd5JywgLTYpXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIDI0MClcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLCAnIzAwMCcpXG4gICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdzdGFydCcpXG4gICAgICAgIC5hdHRyKCdmb250LXdlaWdodCcsICdib2xkJylcbiAgICAgICAgLnRleHQoJ1RoZSBtZWFuaW5nIG9mIGNvbG9ycyBvbiB0aGUgbWFwJylcbiAgICAgIFxuICAgICAgbGVnZW5kXG4gICAgICAgIC5jYWxsKGQzLmF4aXNCb3R0b20obGVnU2NhbGUpXG4gICAgICAgICAgLnRpY2tTaXplKDEzKVxuICAgICAgICAgIC50aWNrRm9ybWF0KGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkgKyAnJScgfSlcbiAgICAgICAgICAudGlja1ZhbHVlcyhjb2xvci5kb21haW4oKSlcbiAgICAgICAgKVxuICAgICAgICAuc2VsZWN0KCcuZG9tYWluJylcbiAgICAgICAgLnJlbW92ZSgpXG5cbiAgICAgIHN2Z1xuICAgICAgICAuYXBwZW5kKCdnJylcbiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ2NvdW50aWVzJylcbiAgICAgICAgLnNlbGVjdEFsbCgncGF0aCcpXG4gICAgICAgIC5kYXRhKHRvcG9qc29uLmZlYXR1cmUodXMsIHVzLm9iamVjdHMuY291bnRpZXMpLmZlYXR1cmVzKVxuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ2NvdW50eScpXG4gICAgICAgIC5hdHRyKCdkYXRhLWZpcHMnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIGQuaWRcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ2RhdGEtZWR1Y2F0aW9uJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGVkdWNhdGlvbi5maWx0ZXIoZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqLmZpcHMgPT0gZC5pZFxuICAgICAgICAgIH0pXG4gICAgICAgICAgaWYocmVzdWx0WzBdKXtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRbMF0uYmFjaGVsb3JzT3JIaWdoZXJcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDBcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbihkKSB7IFxuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGVkdWNhdGlvbi5maWx0ZXIoZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqLmZpcHMgPT0gZC5pZFxuICAgICAgICAgIH0pXG4gICAgICAgICAgaWYocmVzdWx0WzBdKXtcbiAgICAgICAgICAgIHJldHVybiBjb2xvcihyZXN1bHRbMF0uYmFjaGVsb3JzT3JIaWdoZXIpXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjb2xvcigwKVxuICAgICAgICB9KVxuICAgICAgICAuYXR0cignZCcsIHBhdGgpXG4gICAgICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24oZCkgeyAgICAgIFxuICAgICAgICAgIHRvb2x0aXAuc3R5bGUoJ29wYWNpdHknLCAuOSkgXG4gICAgICAgICAgdG9vbHRpcC5odG1sKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZWR1Y2F0aW9uLmZpbHRlcihmdW5jdGlvbihvYmopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG9iai5maXBzID09IGQuaWRcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBpZihyZXN1bHRbMF0pe1xuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0WzBdWydhcmVhX25hbWUnXSArICcsICcgKyByZXN1bHRbMF1bJ3N0YXRlJ10gKyAnOiAnICsgcmVzdWx0WzBdLmJhY2hlbG9yc09ySGlnaGVyICsgJyUnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gJ25vdCBmb3VuZCdcbiAgICAgICAgICB9KVxuICAgICAgICAgICAgLmF0dHIoJ2RhdGEtZWR1Y2F0aW9uJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGVkdWNhdGlvbi5maWx0ZXIoZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9iai5maXBzID09IGQuaWRcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgaWYocmVzdWx0WzBdKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0WzBdLmJhY2hlbG9yc09ySGlnaGVyXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuc3R5bGUoJ2xlZnQnLCAoZDMuZXZlbnQucGFnZVggKyAxMCkgKyAncHgnKSBcbiAgICAgICAgICAgIC5zdHlsZSgndG9wJywgKGQzLmV2ZW50LnBhZ2VZIC0gMjgpICsgJ3B4JylcbiAgICAgICAgfSkgXG4gICAgICAgIC5vbignbW91c2VvdXQnLCBmdW5jdGlvbigpIHsgXG4gICAgICAgICAgdG9vbHRpcC5zdHlsZSgnb3BhY2l0eScsIDApIFxuICAgICAgICB9KVxuICAgIFxuICAgICAgLy9zdmcuYXBwZW5kKCdwYXRoJylcbiAgICAgIC8vICAuZGF0dW0odG9wb2pzb24uZmVhdHVyZSh1cywgdXMub2JqZWN0cy5zdGF0ZXMpKVxuICAgICAgLy8gIC5hdHRyKCdkJywgZDMuZ2VvLnBhdGgoKVxuICAgICAgLy8gICAgLnByb2plY3Rpb24oZDMuZ2VvLmFsYmVyc1VzYSgpKVxuICAgICAgLy8gIClcbiAgICAgIC8vICAuYXR0cignY2xhc3MnLCAnc3RhdGVzJylcblxuICAgICAgLy8gIC5zZWxlY3RBbGwoJ3BhdGgnKVxuICAgICAgLy8gIC5kYXRhKHRvcG9qc29uLm1lc2godXMsIHVzLm9iamVjdHMuc3RhdGVzLCBmdW5jdGlvbihhLCBiKSB7IHJldHVybiBhICE9PSBiIH0pKVxuICAgICAgLy8gIC5lbnRlcigpXG4gICAgICAvLyAgLmFwcGVuZCgncGF0aCcpXG4gICAgICAvLyAgLmF0dHIoJ2NsYXNzJywgJ3N0YXRlcycpXG4gICAgICAvLyAgLmF0dHIoJ2QnLCBwYXRoKVxuICAgIH0pXG59Il19
